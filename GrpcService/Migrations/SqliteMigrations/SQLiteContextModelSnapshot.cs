// <auto-generated />
using System;
using GrpcService.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GrpcService.Migrations.SqliteMigrations
{
    [DbContext(typeof(SQLiteContext))]
    partial class SQLiteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.6");

            modelBuilder.Entity("GrpcService.Models.SQLite.AirPumpSetting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("DelayDuration")
                        .HasColumnType("INTEGER");

                    b.Property<long>("EndTemp")
                        .HasColumnType("INTEGER");

                    b.Property<long>("StartTemp")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UseAirpump")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("AirPumpSettings");
                });

            modelBuilder.Entity("GrpcService.Models.SQLite.MachineInfo", b =>
                {
                    b.Property<long>("SerialNumber")
                        .HasColumnType("INTEGER");

                    b.Property<long>("MachineModel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MachineName")
                        .HasColumnType("TEXT");

                    b.Property<long>("WarrantyEnd")
                        .HasColumnType("INTEGER");

                    b.Property<long>("WarrantyStart")
                        .HasColumnType("INTEGER");

                    b.HasKey("SerialNumber");

                    b.ToTable("MachineInfos");
                });

            modelBuilder.Entity("GrpcService.Models.SQLite.MachineSetting", b =>
                {
                    b.Property<long>("SettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Setting_ID");

                    b.Property<long>("AfbDelay")
                        .HasColumnType("INTEGER");

                    b.Property<long>("AfbEndTemp")
                        .HasColumnType("INTEGER");

                    b.Property<long>("AfbStartTemp")
                        .HasColumnType("INTEGER");

                    b.Property<long>("AlarmAfb")
                        .HasColumnType("INTEGER")
                        .HasColumnName("AlarmAFB");

                    b.Property<long>("AlarmOven")
                        .HasColumnType("INTEGER");

                    b.Property<long>("FloorStartTemp")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ModifyDate")
                        .HasColumnType("INTEGER");

                    b.Property<long>("PumpDelay")
                        .HasColumnType("INTEGER");

                    b.Property<long>("PumpEndTemp")
                        .HasColumnType("INTEGER");

                    b.Property<long>("PumpStartTemp")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TubeStartTemp")
                        .HasColumnType("INTEGER");

                    b.HasKey("SettingId");

                    b.ToTable("MachineSettings");
                });

            modelBuilder.Entity("GrpcService.Models.SQLite.OperationLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<long?>("ActualTempAfb")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ActualTempAFB");

                    b.Property<long?>("ActualTempFloor")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ActualTempOven")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ActualTempTube")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("CurrentStep")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("Door")
                        .HasColumnType("INTEGER");

                    b.Property<long>("LogId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("LogID");

                    b.Property<string>("OperationTime")
                        .HasColumnType("TEXT");

                    b.Property<long?>("PatternId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("PatternID");

                    b.Property<string>("PatternStatus")
                        .HasColumnType("TEXT");

                    b.Property<long?>("TotalStep")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("OperationLogs");
                });

            modelBuilder.Entity("GrpcService.Models.SQLite.Pattern", b =>
                {
                    b.Property<long>("PatternNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("AirpumpId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifyDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PatternName")
                        .HasColumnType("TEXT");

                    b.Property<long?>("UseAfb")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("UseAFB")
                        .HasDefaultValueSql("1");

                    b.HasKey("PatternNumber");

                    b.HasIndex("AirpumpId");

                    b.ToTable("Patterns");
                });

            modelBuilder.Entity("GrpcService.Models.SQLite.PatternItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("PatternNumber")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Step")
                        .HasColumnType("INTEGER");

                    b.Property<long>("StepDuration")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Temp")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PatternNumber");

                    b.ToTable("PatternItems");
                });

            modelBuilder.Entity("GrpcService.Models.SQLite.Pattern", b =>
                {
                    b.HasOne("GrpcService.Models.SQLite.AirPumpSetting", "Airpump")
                        .WithMany("Patterns")
                        .HasForeignKey("AirpumpId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Airpump");
                });

            modelBuilder.Entity("GrpcService.Models.SQLite.PatternItem", b =>
                {
                    b.HasOne("GrpcService.Models.SQLite.Pattern", "PatternNumberNavigation")
                        .WithMany("PatternItems")
                        .HasForeignKey("PatternNumber")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PatternNumberNavigation");
                });

            modelBuilder.Entity("GrpcService.Models.SQLite.AirPumpSetting", b =>
                {
                    b.Navigation("Patterns");
                });

            modelBuilder.Entity("GrpcService.Models.SQLite.Pattern", b =>
                {
                    b.Navigation("PatternItems");
                });
#pragma warning restore 612, 618
        }
    }
}
